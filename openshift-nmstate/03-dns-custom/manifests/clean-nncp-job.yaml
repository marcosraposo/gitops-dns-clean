apiVersion: batch/v1
kind: Job
metadata:
  name: nmstate-cleanup
  namespace: openshift-nmstate 
  annotations:
    # üö® Mude para Sync: N√ÉO executa na cria√ß√£o (apenas cria o recurso Job).
    argocd.argoproj.io/hook: Sync  
    
    # üö® ANOTA√á√ÉO CR√çTICA: Diz ao ArgoCD para executar este Job como um Hook
    # quando a Application for deletada. Ele ser√° executado ANTES do prune
    # dos recursos filhos normais (ServiceAccount, NNCP, etc.).
    argocd.argoproj.io/hook-delete-policy: Hook
    
    # sync-wave ALTO: O Job √© o primeiro recurso a ser processado na exclus√£o.
    argocd.argoproj.io/sync-wave: "10"


#  annotations:
#    argocd.argoproj.io/hook: PostDelete  
#    argocd.argoproj.io/hook-delete-policy: HookFailed
#    argocd.argoproj.io/sync-wave: "10"
spec:
  template:
    spec:
      serviceAccountName: nmstate-clean-job # O ServiceAccount que criamos
      restartPolicy: Never # Garante que o Job n√£o reinicie o pod se ele falhar
      containers:
      - name: yaml-generator-executor
        image: registry.redhat.io/openshift4/ose-cli:latest # Imagem com o CLI do OpenShift
        command: ["/bin/bash", "-c"]
        args:
          - | 

            # 1. Escrever o conte√∫do do YAML no arquivo
            cat <<EOF > /tmp/dns-custom-cleanup.yaml
            apiVersion: nmstate.io/v1
            kind: NodeNetworkConfigurationPolicy
            metadata:
              name: dns-custom-cleanup
              namespace: openshift-nmstate
            spec: 
              desiredState: 
                dns-resolver:
                  config: {}  
            EOF
            oc apply -f /tmp/dns-custom-cleanup.yaml
            sleep 30
            echo "Removendo o cleanup criado"
            oc delete nncp dns-custom-cleanup              
            echo "Remo√ß√£o do DNS adicionado e CRD do NNCP criado com sucesso"                      

          